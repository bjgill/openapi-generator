swagger: '2.0'
info:
  description: "This spec is mainly for testing Petstore server and contains fake endpoints, models. Please do not use this for any other purpose. Special characters: \" \\"
  version: 1.0.0
  title: Swagger Petstore
  termsOfService: 'http://swagger.io/terms/'
  contact:
    email: apiteam@swagger.io
  license:
    name: Apache-2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
host: petstore.swagger.io:80
basePath: /v2
tags:
  - name: pet
    description: Everything about your Pets
    externalDocs:
      description: Find out more
      url: 'http://swagger.io'
  - name: store
    description: Access to Petstore orders
  - name: user
    description: Operations about user
    externalDocs:
      description: Find out more about our store
      url: 'http://swagger.io'
schemes:
  - http
paths:
  /fake/outer/number:
    post:
      consumes:
        - application/json
        # - application/xml
      produces:
        # - application/xml
        - application/json
      tags:
        - fake
      description: Test serialization of outer number types
      operationId: fakeOuterNumberSerialize
      parameters:
        - name: body
          in: body
          description: Input number as post body
          schema:
            $ref: '#/definitions/OuterNumber'
      responses:
        '200':
          description: Output number
          schema:
            $ref: '#/definitions/OuterNumber'
  /fake/outer/string:
    post:
      tags:
        - fake
      description: Test serialization of outer string types
      operationId: fakeOuterStringSerialize
      parameters:
        - name: body
          in: body
          description: Input string as post body
          schema:
            $ref: '#/definitions/OuterString'
      responses:
        '200':
          description: Output string
          schema:
            $ref: '#/definitions/OuterString'
  /fake/outer/boolean:
    post:
      tags:
        - fake
      description: Test serialization of outer boolean types
      operationId: fakeOuterBooleanSerialize
      parameters:
        - name: body
          in: body
          description: Input boolean as post body
          schema:
            $ref: '#/definitions/OuterBoolean'
      responses:
        '200':
          description: Output boolean
          schema:
            $ref: '#/definitions/OuterBoolean'
  /fake/outer/composite:
    post:
      tags:
        - fake
      description: Test serialization of object with outer number type
      operationId: fakeOuterCompositeSerialize
      parameters:
        - name: body
          in: body
          description: Input composite as post body
          schema:
            $ref: '#/definitions/OuterComposite'
      responses:
        '200':
          description: Output composite
          schema:
            $ref: '#/definitions/OuterComposite'

definitions:
  OuterEnum:
    type: "string"
    enum:
    - "placed"
    - "approved"
    - "delivered"
  OuterComposite:
    type: object
    properties:
      my_number:
        $ref: '#/definitions/OuterNumber'
      my_string:
        $ref: '#/definitions/OuterString'
      my_boolean:
        $ref: '#/definitions/OuterBoolean'
  OuterNumber:
    type: number
  OuterString:
    type: string
  OuterBoolean:
    type: boolean
